{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\React_Food_Ordering_App\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Modal from '../UI/Modal';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context';\nimport CartItem from './CartItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const CartCtx = useContext(CartContext);\n  const totalAmount = `$${CartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = CartCtx.items.length > 1;\n\n  const cartItemAddHandler = item => {\n    CartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const cartItemRemoveHandler = id => {\n    CartCtx.removeItem(id);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: CartCtx.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(CartItem, {\n        price: item.price,\n        name: item.name,\n        amount: item.amount,\n        onRemove: cartItemRemoveHandler.bind(null, item.id),\n        onAdd: cartItemAddHandler.bind(null, item)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 24\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClosee: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['button--alt'],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"Yf+AQNcTkAxAxrEXb5hSQx8ybVc=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/Github/React_Food_Ordering_App/src/components/Cart/Cart.js"],"names":["React","useContext","Modal","classes","CartContext","CartItem","Cart","props","CartCtx","totalAmount","toFixed","hasItems","items","length","cartItemAddHandler","item","addItem","amount","cartItemRemoveHandler","id","removeItem","cartItems","map","price","name","bind","onClose","total","actions","button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAG;AAAA;;AACjB,QAAMC,OAAO,GAAGP,UAAU,CAACG,WAAD,CAA1B;AAEA,QAAMK,WAAW,GAAI,IAAGD,OAAO,CAACC,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD;AACA,QAAMC,QAAQ,GAAGH,OAAO,CAACI,KAAR,CAAcC,MAAd,GAAuB,CAAxC;;AAEA,QAAMC,kBAAkB,GAAGC,IAAI,IAAI;AAC/BP,IAAAA,OAAO,CAACQ,OAAR,CAAgB,EAAC,GAAGD,IAAJ;AAAUE,MAAAA,MAAM,EAAC;AAAjB,KAAhB;AACH,GAFD;;AAGA,QAAMC,qBAAqB,GAAGC,EAAE,IAAI;AAChCX,IAAAA,OAAO,CAACY,UAAR,CAAmBD,EAAnB;AACH,GAFD;;AAIA,QAAME,SAAS,gBAAI;AAAI,IAAA,SAAS,EAAElB,OAAO,CAAC,YAAD,CAAtB;AAAA,cACdK,OAAO,CAACI,KAAR,CAAcU,GAAd,CAAmBP,IAAI,iBACxB;AAAA,6BAAI,QAAC,QAAD;AAEJ,QAAA,KAAK,EAAEA,IAAI,CAACQ,KAFR;AAGJ,QAAA,IAAI,EAAER,IAAI,CAACS,IAHP;AAIJ,QAAA,MAAM,EAAET,IAAI,CAACE,MAJT;AAKJ,QAAA,QAAQ,EAAEC,qBAAqB,CAACO,IAAtB,CAA2B,IAA3B,EAAiCV,IAAI,CAACI,EAAtC,CALN;AAMJ,QAAA,KAAK,EAAEL,kBAAkB,CAACW,IAAnB,CAAwB,IAAxB,EAA8BV,IAA9B;AANH,SACCA,IAAI,CAACI,EADN;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YADC;AADc;AAAA;AAAA;AAAA;AAAA,UAAnB;;AAaA,sBACI,QAAC,KAAD;AAAO,IAAA,QAAQ,EAAEZ,KAAK,CAACmB,OAAvB;AAAA,eACKL,SADL,eAEI;AAAK,MAAA,SAAS,EAAElB,OAAO,CAACwB,KAAxB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOlB;AAAP;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAK,MAAA,SAAS,EAAEN,OAAO,CAACyB,OAAxB;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAEzB,OAAO,CAAC,aAAD,CAA1B;AAA2C,QAAA,OAAO,EAAEI,KAAK,CAACmB,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKf,QAAQ,iBAAI;AAAQ,QAAA,SAAS,EAAER,OAAO,CAAC0B,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAvCD;;GAAMvB,I;;KAAAA,I;AAyCN,eAAeA,IAAf","sourcesContent":["import React, { useContext } from 'react';\r\nimport Modal from '../UI/Modal';\r\nimport classes from './Cart.module.css';\r\nimport CartContext from '../../store/cart-context';\r\nimport CartItem from './CartItem';\r\n\r\nconst Cart = props =>{\r\n    const CartCtx = useContext(CartContext);\r\n\r\n    const totalAmount = `$${CartCtx.totalAmount.toFixed(2)}`;\r\n    const hasItems = CartCtx.items.length > 1;\r\n\r\n    const cartItemAddHandler = item => {\r\n        CartCtx.addItem({...item, amount:1});\r\n    }\r\n    const cartItemRemoveHandler = id => {\r\n        CartCtx.removeItem(id);\r\n    }\r\n\r\n    const cartItems = (<ul className={classes['cart-items']}>\r\n        {CartCtx.items.map( item => \r\n        <li><CartItem \r\n        key={item.id} \r\n        price={item.price} \r\n        name={item.name} \r\n        amount={item.amount} \r\n        onRemove={cartItemRemoveHandler.bind(null, item.id)} \r\n        onAdd={cartItemAddHandler.bind(null, item)}/></li>\r\n        )}\r\n    </ul>\r\n    );\r\n\r\n    return(\r\n        <Modal onClosee={props.onClose}>\r\n            {cartItems}\r\n            <div className={classes.total}>\r\n                <span>Total Amount</span>\r\n                <span>{totalAmount}</span>\r\n            </div>\r\n            <div className={classes.actions}>\r\n                <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n                {hasItems && <button className={classes.button}>Order</button>}\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}